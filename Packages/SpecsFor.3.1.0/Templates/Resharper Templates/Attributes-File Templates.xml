<TemplatesExport family="File Templates">
	<Template uid="b59a8a5c-ce26-4c07-a139-f87f3c53065c" shortcut="" description="Specs" text="namespace $NAMESPACE$&#xD;&#xA;{&#xD;&#xA;	public class $CLASS$&#xD;&#xA;	{&#xD;&#xA;		[SpecsFor.Given()]&#xD;&#xA;		public class when_$SPEC$ : SpecsFor.SpecsFor&lt;$SUT$&gt;&#xD;&#xA;		{&#xD;&#xA;			public when_$SPEC$(System.Type[] context) : base(context){}&#xD;&#xA;&#xD;&#xA;			protected override void When()&#xD;&#xA;			{&#xD;&#xA;				$END$&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;	}	&#xD;&#xA;}" reformat="False" shortenQualifiedReferences="True">
		<Context>
			<ProjectLanguageContext language="CSharp" />
		</Context>
		<Categories />
		<Variables>
			<Variable name="NAMESPACE" expression="fileDefaultNamespace()" initialRange="-1" />
			<Variable name="CLASS" expression="getFileNameWithoutExtension()" initialRange="-1" />
			<Variable name="SUT" expression="" initialRange="0" />
			<Variable name="SPEC" expression="" initialRange="0" />
		</Variables>
		<CustomProperties>
			<Property key="FileName" value="Class" />
			<Property key="Extension" value="cs" />
			<Property key="ValidateFileName" value="True" />
		</CustomProperties>
	</Template>
</TemplatesExport>