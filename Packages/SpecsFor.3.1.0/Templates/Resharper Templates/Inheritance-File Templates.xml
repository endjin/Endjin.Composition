<TemplatesExport family="File Templates">
  <Template uid="b59a8a5c-ce26-4c07-a139-f87f3c53065c" shortcut="" description="Specs" text="namespace $NAMESPACE$&#xD;&#xA;{&#xD;&#xA;	public class $CLASS$&#xD;&#xA;	{&#xD;&#xA;		public class when_$SPEC$ : given.the_default_state&#xD;&#xA;		{&#xD;&#xA;			protected override void When()&#xD;&#xA;			{&#xD;&#xA;				$END$&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		public static class given&#xD;&#xA;		{&#xD;&#xA;			public abstract class the_default_state : SpecsFor.SpecsFor&lt;$SUT$&gt;&#xD;&#xA;			{&#xD;&#xA;				protected override void Given()&#xD;&#xA;				{					&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;	}	&#xD;&#xA;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <ProjectLanguageContext language="CSharp" />
    </Context>
    <Categories />
    <Variables>
      <Variable name="NAMESPACE" expression="fileDefaultNamespace()" initialRange="-1" />
      <Variable name="CLASS" expression="getFileNameWithoutExtension()" initialRange="-1" />
      <Variable name="SPEC" expression="" initialRange="0" />
      <Variable name="SUT" expression="" initialRange="0" />
    </Variables>
    <CustomProperties>
      <Property key="FileName" value="Class" />
      <Property key="Extension" value="cs" />
      <Property key="ValidateFileName" value="True" />
    </CustomProperties>
  </Template>
</TemplatesExport>